<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>brainy is the new sexy</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-19T14:14:54.488Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Error</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode 169.多数元素</title>
    <link href="http://yoursite.com/2020/07/19/LeetCode-169-%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/"/>
    <id>http://yoursite.com/2020/07/19/LeetCode-169-%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/</id>
    <published>2020-07-19T14:11:47.000Z</published>
    <updated>2020-07-19T14:14:54.488Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h4 id="排序法"><a href="#排序法" class="headerlink" title="排序法"></a>排序法</h4><p>既然数组中有出现次数&gt; ⌊ n/2 ⌋的元素，那排好序之后的数组中，相同元素总是相邻的。<br>即存在长度&gt; ⌊ n/2 ⌋的一长串 由相同元素构成的连续子数组。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">return</span> nums[nums.length &gt;&gt; <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="摩尔投票法"><a href="#摩尔投票法" class="headerlink" title="摩尔投票法"></a>摩尔投票法</h4><p>候选人(cand_num)初始化为nums[0]，票数count初始化为1。<br>当遇到与cand_num相同的数，则票数count = count + 1，否则票数count = count - 1。<br>当票数count为0时，更换候选人，并将票数count重置为1。<br>遍历完数组后，cand_num即为最终答案。</p><p>为何这行得通呢？<br>投票法是遇到相同的则票数 + 1，遇到不同的则票数 - 1。<br>且“多数元素”的个数&gt; ⌊ n/2 ⌋，其余元素的个数总和&lt;= ⌊ n/2 ⌋。<br>因此“多数元素”的个数 - 其余元素的个数总和 的结果 肯定 &gt;= 1。<br>这就相当于每个“多数元素”和其他元素 两两相互抵消，抵消到最后肯定还剩余至少1个“多数元素”。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> cand_num = nums[<span class="number">0</span>], count = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.length; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cand_num == nums[i])</span><br><span class="line">                ++count;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (--count == <span class="number">0</span>) &#123;</span><br><span class="line">                cand_num = nums[i];</span><br><span class="line">                count = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cand_num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 136.只出现一次的数字</title>
    <link href="http://yoursite.com/2020/07/19/LeetCode-136%EF%BC%9A%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    <id>http://yoursite.com/2020/07/19/LeetCode-136%EF%BC%9A%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/</id>
    <published>2020-07-19T13:57:13.000Z</published>
    <updated>2020-07-19T14:12:43.820Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h4 id="方法：使用位运算"><a href="#方法：使用位运算" class="headerlink" title="方法：使用位运算"></a>方法：使用位运算</h4><p>答案是使用位运算。对于这道题，可使用异或运算 \oplus⊕。异或运算有以下三个性质。</p><p>1.任何数和 0 做异或运算，结果仍然是原来的数<br>2.任何数和其自身做异或运算，结果是 0。<br>3.异或运算满足交换律和结合律。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> single = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">            single ^= num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> single;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>复杂度分析</strong></p><ul><li>时间复杂度：O(n)，其中 n 是数组长度。只需要对数组遍历一次。</li><li>空间复杂度：O(1)。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Java位运算</title>
    <link href="http://yoursite.com/2020/07/19/Java%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>http://yoursite.com/2020/07/19/Java%E4%BD%8D%E8%BF%90%E7%AE%97/</id>
    <published>2020-07-19T09:39:00.000Z</published>
    <updated>2020-07-19T09:58:26.653Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><h4 id="1-1-Java支持的位运算符"><a href="#1-1-Java支持的位运算符" class="headerlink" title="1.1 Java支持的位运算符"></a>1.1 Java支持的位运算符</h4><p>&amp;：按位与</p><p>|：按位或</p><p>~：按位非</p><p>^：按位异或</p><p>&lt;&lt;：左位移</p><p>&gt;&gt;：右位移运算符</p><p>&gt;&gt;&gt;：无符号右移运算符</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="1-2-按位与（-amp-）"><a href="#1-2-按位与（-amp-）" class="headerlink" title="1.2  按位与（&amp;）"></a>1.2  按位与（&amp;）</h4><table><thead><tr><th>操作数1</th><th>0</th><th>0</th><th>1</th><th>1</th></tr></thead><tbody><tr><td>操作数2</td><td>0</td><td>1</td><td>0</td><td>1</td></tr><tr><td>按位与</td><td>0</td><td>0</td><td>0</td><td>1</td></tr></tbody></table><p>规则总结：只有两个操作数对应位同为1时，结果为1，其余全为0. （或者是只要有一个操作数为0，结果就为0）</p><h4 id="1-3-按位或（-）"><a href="#1-3-按位或（-）" class="headerlink" title="1.3  按位或（|）"></a>1.3  按位或（|）</h4><table><thead><tr><th>操作数1</th><th>0</th><th>0</th><th>1</th><th>1</th></tr></thead><tbody><tr><td>操作数2</td><td>0</td><td>1</td><td>0</td><td>1</td></tr><tr><td>按位或</td><td>0</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>规则总结：只有两个操作数对应位同为0时，结果为0，其余全为1.（或者是只要有一个操作数为1，结果就为1）。</p><h4 id="1-4-按位非（-）"><a href="#1-4-按位非（-）" class="headerlink" title="1.4  按位非（~）"></a>1.4  按位非（~）</h4><table><thead><tr><th>操作数1</th><th>0</th><th>0</th><th>1</th><th align="center">1</th></tr></thead><tbody><tr><td>按位非</td><td>1</td><td>1</td><td>0</td><td align="center">0</td></tr></tbody></table><h4 id="1-3-按位异或（-）"><a href="#1-3-按位异或（-）" class="headerlink" title="1.3  按位异或（^）"></a>1.3  按位异或（^）</h4><table><thead><tr><th>操作数1</th><th>0</th><th>0</th><th>1</th><th>1</th></tr></thead><tbody><tr><td>操作数2</td><td>0</td><td>1</td><td>0</td><td>1</td></tr><tr><td>按位异或</td><td>0</td><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>规则总结：相同为0，异：1.</p><h4 id="1-6-左位移（-lt-lt-）"><a href="#1-6-左位移（-lt-lt-）" class="headerlink" title="1.6 左位移（&lt;&lt;）"></a>1.6 左位移（&lt;&lt;）</h4><p>算术左移（&lt;&lt;）: 符号位不变，低位补0。如：2&lt;&lt;2结果为8。</p><p><img src="https://img-blog.csdn.net/20161012133936660?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><h4 id="1-7-右位移（-gt-gt-）"><a href="#1-7-右位移（-gt-gt-）" class="headerlink" title="1.7 右位移（&gt;&gt;）"></a>1.7 右位移（&gt;&gt;）</h4><p>低位溢出，符号位不变，并用符号位补溢出的高位。如：-6&gt;&gt;2结果为-2。</p><p><img src="https://img-blog.csdn.net/20161012133940950?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
    
      <category term="Java基础" scheme="http://yoursite.com/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>使用git上传本地代码到github仓库</title>
    <link href="http://yoursite.com/2020/07/09/%E4%BD%BF%E7%94%A8git%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%88%B0github%E4%BB%93%E5%BA%93/"/>
    <id>http://yoursite.com/2020/07/09/%E4%BD%BF%E7%94%A8git%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%88%B0github%E4%BB%93%E5%BA%93/</id>
    <published>2020-07-09T09:21:58.000Z</published>
    <updated>2020-07-09T10:42:12.606Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>前提条件：安装git，拥有github账号</p><hr><h4 id="1-创建一个github仓库"><a href="#1-创建一个github仓库" class="headerlink" title="1.创建一个github仓库"></a>1.创建一个github仓库</h4><p><img src="https://img-blog.csdnimg.cn/20200630211236580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTM2NTQzNzM=,size_16,color_FFFFFF,t_70" alt=""></p><h6 id="创建完成后查看仓库的地址："><a href="#创建完成后查看仓库的地址：" class="headerlink" title="创建完成后查看仓库的地址："></a>创建完成后查看仓库的地址：</h6><p><img src="https://img-blog.csdnimg.cn/20200630211433843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTM2NTQzNzM=,size_16,color_FFFFFF,t_70" alt=""></p><h4 id="2-创建本地仓库"><a href="#2-创建本地仓库" class="headerlink" title="2.创建本地仓库"></a>2.创建本地仓库</h4><h6 id="打开要上传的代码文件夹，右键git-bash-here，输入以下代码："><a href="#打开要上传的代码文件夹，右键git-bash-here，输入以下代码：" class="headerlink" title="打开要上传的代码文件夹，右键git bash here，输入以下代码："></a>打开要上传的代码文件夹，右键git bash here，输入以下代码：</h6><p>交给github管理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p>将此文件夹的文件添加带本地仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>提交到本地仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#39;first commit&#39;</span><br></pre></td></tr></table></figure><h4 id="3-由本地仓库推送到github仓库"><a href="#3-由本地仓库推送到github仓库" class="headerlink" title="3.由本地仓库推送到github仓库"></a>3.由本地仓库推送到github仓库</h4><p>提交到github仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;xxxxxx.git</span><br></pre></td></tr></table></figure><p><em><a href="https://github.com/xxxxxx.git：为第一步最后创建github仓库的地址" target="_blank" rel="noopener">https://github.com/xxxxxx.git：为第一步最后创建github仓库的地址</a></em></p><p>推送到github仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><div class="note class_name=warning"><p>注意: github创建仓库时有一个Initialize this repository with a README</p><p>如果勾选的话$ git push -u origin master 我们则会出错</p><p>使用如下命令解决：$ git pull –rebase origin master</p><p>之后再进行$ git push -u origin master 就可以成功了 </p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
    
      <category term="实用技巧" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
</feed>
